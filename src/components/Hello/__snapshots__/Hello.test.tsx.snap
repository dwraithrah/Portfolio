// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Hello /> renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <hello
    decrement={[Function]}
    enthusiasmLevel={1}
    increment={[Function]}
    name="Jimmy"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <withStyles(GridWrapper)
          alignItems="center"
          container={true}
          wrap="wrap"
>
          <withStyles(GridWrapper)
                    className="greeting"
                    item={true}
                    xs={12}
          >
                    <withStyles(Typography)
                              align="center"
                              className="greeting"
                              gutterBottom={true}
                              style={
                                        Object {
                                                  "color": "#e3f2fd",
                                                }
                              }
                              type="display2"
                    >
                              Hello 
                              Jimmy!
                    </withStyles(Typography)>
          </withStyles(GridWrapper)>
</withStyles(GridWrapper)>,
        <withStyles(GridWrapper)
          alignItems="center"
          container={true}
          justify="center"
          spacing={40}
>
          <withStyles(GridWrapper)
                    item={true}
                    sm={6}
                    xs={12}
          >
                    <withStyles(Button)
                              color="primary"
                              onClick={[Function]}
                              raised={true}
                    >
                              Increase Happiness
                    </withStyles(Button)>
          </withStyles(GridWrapper)>
          <withStyles(GridWrapper)
                    item={true}
                    sm={6}
                    xs={12}
          >
                    <withStyles(Button)
                              color="primary"
                              onClick={[Function]}
                              raised={true}
                    >
                              Decrease Happiness
                    </withStyles(Button)>
          </withStyles(GridWrapper)>
</withStyles(GridWrapper)>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "center",
          "children": <withStyles(GridWrapper)
            className="greeting"
            item={true}
            xs={12}
>
            <withStyles(Typography)
                        align="center"
                        className="greeting"
                        gutterBottom={true}
                        style={
                                    Object {
                                                "color": "#e3f2fd",
                                              }
                        }
                        type="display2"
            >
                        Hello 
                        Jimmy!
            </withStyles(Typography)>
</withStyles(GridWrapper)>,
          "container": true,
          "wrap": "wrap",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <withStyles(Typography)
              align="center"
              className="greeting"
              gutterBottom={true}
              style={
                            Object {
                                          "color": "#e3f2fd",
                                        }
              }
              type="display2"
>
              Hello 
              Jimmy!
</withStyles(Typography)>,
            "className": "greeting",
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "center",
              "children": Array [
                "Hello ",
                "Jimmy!",
              ],
              "className": "greeting",
              "gutterBottom": true,
              "style": Object {
                "color": "#e3f2fd",
              },
              "type": "display2",
            },
            "ref": null,
            "rendered": Array [
              "Hello ",
              "Jimmy!",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alignItems": "center",
          "children": Array [
            <withStyles(GridWrapper)
              item={true}
              sm={6}
              xs={12}
>
              <withStyles(Button)
                            color="primary"
                            onClick={[Function]}
                            raised={true}
              >
                            Increase Happiness
              </withStyles(Button)>
</withStyles(GridWrapper)>,
            <withStyles(GridWrapper)
              item={true}
              sm={6}
              xs={12}
>
              <withStyles(Button)
                            color="primary"
                            onClick={[Function]}
                            raised={true}
              >
                            Decrease Happiness
              </withStyles(Button)>
</withStyles(GridWrapper)>,
          ],
          "container": true,
          "justify": "center",
          "spacing": 40,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <withStyles(Button)
                color="primary"
                onClick={[Function]}
                raised={true}
>
                Increase Happiness
</withStyles(Button)>,
              "item": true,
              "sm": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Increase Happiness",
                "color": "primary",
                "onClick": [Function],
                "raised": true,
              },
              "ref": null,
              "rendered": "Increase Happiness",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <withStyles(Button)
                color="primary"
                onClick={[Function]}
                raised={true}
>
                Decrease Happiness
</withStyles(Button)>,
              "item": true,
              "sm": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Decrease Happiness",
                "color": "primary",
                "onClick": [Function],
                "raised": true,
              },
              "ref": null,
              "rendered": "Decrease Happiness",
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <withStyles(GridWrapper)
            alignItems="center"
            container={true}
            wrap="wrap"
>
            <withStyles(GridWrapper)
                        className="greeting"
                        item={true}
                        xs={12}
            >
                        <withStyles(Typography)
                                    align="center"
                                    className="greeting"
                                    gutterBottom={true}
                                    style={
                                                Object {
                                                            "color": "#e3f2fd",
                                                          }
                                    }
                                    type="display2"
                        >
                                    Hello 
                                    Jimmy!
                        </withStyles(Typography)>
            </withStyles(GridWrapper)>
</withStyles(GridWrapper)>,
          <withStyles(GridWrapper)
            alignItems="center"
            container={true}
            justify="center"
            spacing={40}
>
            <withStyles(GridWrapper)
                        item={true}
                        sm={6}
                        xs={12}
            >
                        <withStyles(Button)
                                    color="primary"
                                    onClick={[Function]}
                                    raised={true}
                        >
                                    Increase Happiness
                        </withStyles(Button)>
            </withStyles(GridWrapper)>
            <withStyles(GridWrapper)
                        item={true}
                        sm={6}
                        xs={12}
            >
                        <withStyles(Button)
                                    color="primary"
                                    onClick={[Function]}
                                    raised={true}
                        >
                                    Decrease Happiness
                        </withStyles(Button)>
            </withStyles(GridWrapper)>
</withStyles(GridWrapper)>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "center",
            "children": <withStyles(GridWrapper)
              className="greeting"
              item={true}
              xs={12}
>
              <withStyles(Typography)
                            align="center"
                            className="greeting"
                            gutterBottom={true}
                            style={
                                          Object {
                                                        "color": "#e3f2fd",
                                                      }
                            }
                            type="display2"
              >
                            Hello 
                            Jimmy!
              </withStyles(Typography)>
</withStyles(GridWrapper)>,
            "container": true,
            "wrap": "wrap",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <withStyles(Typography)
                align="center"
                className="greeting"
                gutterBottom={true}
                style={
                                Object {
                                                "color": "#e3f2fd",
                                              }
                }
                type="display2"
>
                Hello 
                Jimmy!
</withStyles(Typography)>,
              "className": "greeting",
              "item": true,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "center",
                "children": Array [
                  "Hello ",
                  "Jimmy!",
                ],
                "className": "greeting",
                "gutterBottom": true,
                "style": Object {
                  "color": "#e3f2fd",
                },
                "type": "display2",
              },
              "ref": null,
              "rendered": Array [
                "Hello ",
                "Jimmy!",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "center",
            "children": Array [
              <withStyles(GridWrapper)
                item={true}
                sm={6}
                xs={12}
>
                <withStyles(Button)
                                color="primary"
                                onClick={[Function]}
                                raised={true}
                >
                                Increase Happiness
                </withStyles(Button)>
</withStyles(GridWrapper)>,
              <withStyles(GridWrapper)
                item={true}
                sm={6}
                xs={12}
>
                <withStyles(Button)
                                color="primary"
                                onClick={[Function]}
                                raised={true}
                >
                                Decrease Happiness
                </withStyles(Button)>
</withStyles(GridWrapper)>,
            ],
            "container": true,
            "justify": "center",
            "spacing": 40,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <withStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  raised={true}
>
                  Increase Happiness
</withStyles(Button)>,
                "item": true,
                "sm": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Increase Happiness",
                  "color": "primary",
                  "onClick": [Function],
                  "raised": true,
                },
                "ref": null,
                "rendered": "Increase Happiness",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <withStyles(Button)
                  color="primary"
                  onClick={[Function]}
                  raised={true}
>
                  Decrease Happiness
</withStyles(Button)>,
                "item": true,
                "sm": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Decrease Happiness",
                  "color": "primary",
                  "onClick": [Function],
                  "raised": true,
                },
                "ref": null,
                "rendered": "Decrease Happiness",
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
